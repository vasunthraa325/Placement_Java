public class Codec {
    public String serialize(TreeNode root) {
        if(root==null) return "#";
        StringBuilder sb=new StringBuilder();
        Queue<TreeNode> q=new ArrayDeque<>(); q.offer(root);
        while(!q.isEmpty()){
            TreeNode t=q.poll();
            if(t==null){ sb.append("#,"); continue; }
            sb.append(t.val).append(',');
            q.offer(t.left); q.offer(t.right);
        }
        return sb.toString();
    }
    public TreeNode deserialize(String data) {
        String[] arr=data.split(",");
        if(arr[0].equals("#")) return null;
        TreeNode root=new TreeNode(Integer.parseInt(arr[0]));
        Queue<TreeNode> q=new ArrayDeque<>(); q.offer(root);
        int i=1;
        while(!q.isEmpty()){
            TreeNode cur=q.poll();
            if(i<arr.length && !arr[i].equals("#")) cur.left=new TreeNode(Integer.parseInt(arr[i]));
            q.offer(cur.left); i++;
            if(i<arr.length && !arr[i].equals("#")) cur.right=new TreeNode(Integer.parseInt(arr[i]));
            q.offer(cur.right); i++;
        }
        return root;
    }
}
