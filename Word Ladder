class Solution {
    public int ladderLength(String begin, String end, List<String> wordList) {
        Set<String> dict=new HashSet<>(wordList);
        if(!dict.contains(end)) return 0;
        Queue<String> q=new ArrayDeque<>(); q.offer(begin);
        int steps=1; Set<String> vis=new HashSet<>(); vis.add(begin);
        while(!q.isEmpty()){
            for(int sz=q.size(); sz>0; sz--){
                String cur=q.poll(); if(cur.equals(end)) return steps;
                char[] a=cur.toCharArray();
                for(int i=0;i<a.length;i++){
                    char old=a[i];
                    for(char c='a'; c<='z'; c++){
                        if(c==old) continue;
                        a[i]=c; String nxt=new String(a);
                        if(dict.contains(nxt) && vis.add(nxt)) q.offer(nxt);
                    }
                    a[i]=old;
                }
            }
            steps++;
        }
        return 0;
    }
}
