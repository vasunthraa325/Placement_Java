class Solution {
    public double findMedianSortedArrays(int[] A, int[] B) {
        if(A.length>B.length) return findMedianSortedArrays(B,A);
        int m=A.length,n=B.length, half=(m+n+1)/2;
        int lo=0, hi=m;
        while(lo<=hi){
            int i=(lo+hi)/2, j=half-i;
            int Aleft = (i==0)?Integer.MIN_VALUE:A[i-1];
            int Aright= (i==m)?Integer.MAX_VALUE:A[i];
            int Bleft = (j==0)?Integer.MIN_VALUE:B[j-1];
            int Bright= (j==n)?Integer.MAX_VALUE:B[j];
            if(Aleft<=Bright && Bleft<=Aright){
                if(((m+n)&1)==1) return Math.max(Aleft,Bleft);
                return (Math.max(Aleft,Bleft)+Math.min(Aright,Bright))/2.0;
            }else if(Aleft>Bright) hi=i-1;
            else lo=i+1;
        }
        return 0;
    }
}
