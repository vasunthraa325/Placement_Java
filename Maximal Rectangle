class Solution {
    public int maximalRectangle(char[][] M) {
        if(M.length==0) return 0;
        int n=M[0].length, ans=0;
        int[] h=new int[n];
        for(char[] row: M){
            for(int j=0;j<n;j++) h[j] = (row[j]=='1')? h[j]+1 : 0;
            ans=Math.max(ans, largest(h));
        }
        return ans;
    }
    int largest(int[] h){
        Deque<Integer> st=new ArrayDeque<>(); int ans=0;
        for(int i=0;i<=h.length;i++){
            int cur=(i==h.length?0:h[i]);
            while(!st.isEmpty() && cur<h[st.peek()]){
                int H=h[st.pop()];
                int L=st.isEmpty()?0:st.peek()+1;
                ans=Math.max(ans, H*(i-L));
            }
            st.push(i);
        }
        return ans;
    }
}
