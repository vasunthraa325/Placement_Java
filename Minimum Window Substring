class Solution {
    public String minWindow(String s, String t) {
        if(t.length()>s.length()) return "";
        int[] need=new int[128]; int needCnt=0;
        for(char c:t.toCharArray()){ if(need[c]++==0) needCnt++; }
        int[] have=new int[128]; int haveKinds=0, l=0, bestL=0, best=Integer.MAX_VALUE;
        for(int r=0;r<s.length();r++){
            char cr=s.charAt(r);
            if(need[cr]>0 && ++have[cr]==need[cr]) haveKinds++;
            while(haveKinds==needCnt){
                if(r-l+1<best){ best=r-l+1; bestL=l; }
                char cl=s.charAt(l++);
                if(need[cl]>0 && --have[cl]<need[cl]) haveKinds--;
            }
        }
        return best==Integer.MAX_VALUE? "": s.substring(bestL,bestL+best);
    }
}
